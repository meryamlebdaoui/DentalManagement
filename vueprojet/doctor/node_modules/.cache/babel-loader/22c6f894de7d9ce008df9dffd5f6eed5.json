{"ast":null,"code":"import { createStore } from 'vuex';\nimport createPersistedState from 'vuex-persistedstate';\nimport Cookies from 'js-cookie'; // import axios from 'axios'\n\nexport default createStore({\n  state: {\n    user: null,\n    authIsReady: false,\n    failed: false\n  },\n  plugins: [createPersistedState({\n    storage: {\n      getItem: key => Cookies.get(key),\n      setItem: (key, value) => Cookies.set(key, value, {\n        expires: 3,\n        secure: true\n      }),\n      removeItem: key => Cookies.remove(key)\n    }\n  })],\n  getters: {\n    authIsReady: state => state.authIsReady,\n    user: state => state.user\n  },\n  mutations: {\n    setUser(state, user) {\n      state.user = user;\n      console.log('user state changed:', state.user);\n    },\n\n    setAuthIsReady(state, authIsReady) {\n      state.authIsReady = authIsReady;\n      console.log('authIsReady state changed:', state.authIsReady);\n    },\n\n    setFailed(state, failed) {\n      state.failed = failed;\n      console.log('failed state changed:', state.failed);\n    }\n\n  },\n  actions: {\n    async createUser(context, user) {\n      const reponse = await fetch(\"http://localhost/Doctor/Patients/create/\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n      });\n\n      if (reponse.status === 200) {\n        const data = await reponse.json();\n        console.log(data);\n        context.commit('setUser', Cookies.set('user', data[1]));\n        context.commit('setAuthIsReady', true);\n        context.commit('setFailed', false); // save user to local storage using cookies plugin\n\n        Cookies.set('user', data[1]);\n        Cookies.set('authIsReady', true); // localStorage.setItem('user',data[1]) // save user to local storage\n        // stoker user in local storage\n      } else {\n        context.commit('setFailed', true);\n      }\n    },\n\n    async logout(context) {\n      context.commit('setUser', null);\n      context.commit('setAuthIsReady', false); // remove key from cookies\n\n      Cookies.remove;\n      Cookies.remove('authIsReady'); // remove cookies from\n      // Cookies.remove(key)\n    },\n\n    async loginUser(context, Reference) {\n      fetch(\"http://localhost/Doctor/Pasients/login/\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          Reference\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n\n        if (data[0] === 'success') {\n          context.commit('setUser', data[1]);\n          context.commit('setAuthIsReady', true);\n          context.commit('setFailed', false); // save user to local storage using cookies plugin\n\n          Cookies.set('user', data[1]);\n          Cookies.set('authIsReady', true);\n        }\n      }).catch(error => {\n        console.log(error);\n        context.commit('setFailed', true);\n        this.$router.push('/login');\n      });\n    }\n\n  },\n  modules: {}\n});","map":{"version":3,"sources":["C:/Users/MR/Desktop/vueprojet/doctor/src/store/index.js"],"names":["createStore","createPersistedState","Cookies","state","user","authIsReady","failed","plugins","storage","getItem","key","get","setItem","value","set","expires","secure","removeItem","remove","getters","mutations","setUser","console","log","setAuthIsReady","setFailed","actions","createUser","context","reponse","fetch","method","headers","body","JSON","stringify","status","data","json","commit","logout","loginUser","Reference","then","response","catch","error","$router","push","modules"],"mappings":"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","sourcesContent":["import { createStore } from 'vuex'\nimport createPersistedState from 'vuex-persistedstate'\nimport  Cookies from 'js-cookie'\n// import axios from 'axios'\n\n\nexport default createStore({\n\n  state: {\n  \n    user: null,\n    authIsReady: false,\n    failed: false,\n  },\n  plugins: [\n    createPersistedState({\n      storage: {\n        getItem: (key) => Cookies.get(key),\n        setItem: (key, value) =>\n          Cookies.set(key, value, { expires: 3, secure: true }),\n        removeItem: (key) => Cookies.remove(key),\n      },\n    }),\n  ],\n  getters: {\n    authIsReady: state => state.authIsReady,\n    user: state => state.user,\n  },\n  mutations: {\n    setUser(state, user) {\n      state.user = user\n      console.log('user state changed:', state.user)\n    },\n    setAuthIsReady(state, authIsReady) {\n      state.authIsReady = authIsReady\n      console.log('authIsReady state changed:', state.authIsReady)\n    },\n    setFailed(state, failed) {\n      state.failed = failed\n      console.log('failed state changed:', state.failed)\n    },\n  \n  },\n  actions: {\n   async createUser(context, user) {\n\n      const reponse = await fetch(\"http://localhost/Doctor/Patients/create/\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n      })\n      if (reponse.status === 200) {\n        const data = await reponse.json()\n        console.log(data)\n        context.commit('setUser',  Cookies.set('user', data[1]))\n        context.commit('setAuthIsReady', true)\n        context.commit('setFailed', false)\n       \n        // save user to local storage using cookies plugin\n        Cookies.set('user', data[1])\n        Cookies.set('authIsReady', true)\n     \n        // localStorage.setItem('user',data[1]) // save user to local storage\n\n        // stoker user in local storage\n      }else {\n        context.commit('setFailed', true)\n      }\n     \n    \n    \n    },\n    async logout(context) {\n      context.commit('setUser', null)\n      context.commit('setAuthIsReady', false)\n   \n      // remove key from cookies\n      Cookies.remove\n      Cookies.remove('authIsReady')\n      // remove cookies from\n\n    \n\n      \n\n      // Cookies.remove(key)\n    },\n    async loginUser(context, Reference) {\n      fetch(\"http://localhost/Doctor/Pasients/login/\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({Reference})\n      })\n        .then(response => response.json())\n        .then(data => {\n          console.log(data);\n          if (data[0] === 'success') {\n\n            context.commit('setUser', data[1])\n            context.commit('setAuthIsReady', true)\n            context.commit('setFailed', false)\n            // save user to local storage using cookies plugin\n            Cookies.set('user', data[1])\n            Cookies.set('authIsReady', true)\n\n          }\n        }\n      ).catch(error => {\n        console.log(error);\n        context.commit('setFailed', true)\n        this.$router.push('/login')\n      });\n    },\n\n      \n      \n  },\n  modules: {\n  }\n})"]},"metadata":{},"sourceType":"module"}